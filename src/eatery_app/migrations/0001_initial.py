# Generated by Django 3.2.9 on 2021-11-09 02:06

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.IntegerField(choices=[(0, '店員'), (1, '店長')], default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Eatery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('enabled', models.BooleanField(default=True, verbose_name='有効')),
                ('name', models.CharField(max_length=512)),
                ('address', models.CharField(max_length=1024)),
                ('site_url', models.CharField(blank=True, max_length=2048)),
                ('tel', models.CharField(max_length=128)),
                ('tel2', models.CharField(blank=True, max_length=128)),
            ],
            options={
                'verbose_name': '飲食店',
                'verbose_name_plural': '飲食店',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('enabled', models.BooleanField(default=True, verbose_name='有効')),
                ('number', models.PositiveIntegerField(default=1, verbose_name='注文数')),
                ('status', models.IntegerField(choices=[(0, '未処理'), (1, '配膳済み')], default=0)),
            ],
            options={
                'ordering': ['-created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('enabled', models.BooleanField(default=True, verbose_name='有効')),
                ('name', models.CharField(max_length=512, verbose_name='商品名')),
                ('price', models.PositiveIntegerField()),
                ('icon', models.CharField(max_length=128)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            options={
                'ordering': ['category__ordering'],
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('enabled', models.BooleanField(default=True, verbose_name='有効')),
                ('number', models.PositiveIntegerField()),
                ('accomodation', models.PositiveIntegerField()),
                ('start_using_at', models.DateTimeField(blank=True, null=True, verbose_name='使用開始時間')),
                ('status', models.IntegerField(choices=[(0, '空き'), (1, '予約'), (2, '使用中')], default=0)),
                ('eatery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eatery_app.eatery')),
            ],
            options={
                'ordering': ['number'],
                'unique_together': {('eatery', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Usage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('enabled', models.BooleanField(default=True, verbose_name='有効')),
            ],
            options={
                'ordering': ['-created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='eatery_app.baseuser')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('eatery_app.baseuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StoreManger',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='eatery_app.baseuser')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('eatery_app.baseuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('enabled', models.BooleanField(default=True, verbose_name='有効')),
                ('status', models.IntegerField(choices=[(0, '未処理'), (1, '決済終了')], default=0)),
                ('products', models.ManyToManyField(blank=True, through='eatery_app.Order', to='eatery_app.Product')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eatery_app.table')),
            ],
            options={
                'verbose_name': '伝票',
                'verbose_name_plural': '伝票',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('enabled', models.BooleanField(default=True, verbose_name='有効')),
                ('name', models.CharField(max_length=256)),
                ('ordering', models.PositiveIntegerField()),
                ('eatery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eatery_app.eatery')),
            ],
            options={
                'unique_together': {('eatery', 'ordering')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eatery_app.productcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='eatery',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eatery_app.eatery'),
        ),
        migrations.AddField(
            model_name='order',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eatery_app.product'),
        ),
        migrations.AddField(
            model_name='order',
            name='voucher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eatery_app.voucher'),
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('enabled', models.BooleanField(default=True, verbose_name='有効')),
                ('reserved_date', models.DateField(verbose_name='予約日')),
                ('reserved_time', models.TimeField(verbose_name='予約時刻')),
                ('status', models.IntegerField(choices=[(0, '待ち'), (1, '来店確認完了'), (2, 'キャンセル')], default=0)),
                ('name', models.CharField(max_length=1024)),
                ('tel', models.CharField(max_length=128)),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eatery_app.table')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eatery_app.voucher')),
                ('responder', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eatery_app.staff')),
            ],
            options={
                'ordering': ['-created'],
                'abstract': False,
            },
        ),
    ]
